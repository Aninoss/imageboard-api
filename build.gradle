plugins {
    id 'com.jfrog.bintray' version '1.8.5'
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

import org.apache.tools.ant.filters.ReplaceTokens
def versionObj = new Version(major: 2, minor: 3, revision: 2)

group 'net.kodehawa'
version "$versionObj"

def artifactid = 'imageboard-api'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.9.1'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.9.0'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    testImplementation 'ch.qos.logback:logback-classic:1.2.3'
    testImplementation group: 'junit', name: 'junit', version: '4.13.1'
}

task sourcesForRelease(type: Copy) {
    from 'src/main/java'
    into 'build/filteredSrc'
}

//Task for the versioning system
task prepareSource(type: Copy) {
    from 'src/main/java'
    into 'build/prepared-src'
    filter(ReplaceTokens, tokens: [
            version: versionObj.toString()
    ])
    dependsOn clean
}
prepareSource.dependsOn clean

compileJava {
    source = sourcesForRelease.destinationDir
    classpath = sourceSets.main.compileClasspath

    options.encoding = 'UTF-8'

    dependsOn sourcesForRelease
}

jar {
    archiveBaseName = project.name
    manifest {
        attributes 'Implementation-Version': archiveVersion
    }
}

shadowJar {
    classifier("withDependencies")
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier("sources")
    from "${buildDir}/filteredSrc"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier("javadoc")
    from javadoc.destinationDir
}

bintray {
    user = "$bintray_user"
    key = "$bintray_api_key"
    publications = ["BintrayRelease"]
    pkg {
        repo = 'maven'
        name = 'imageboard-api'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/Kodehawa/imageboard-api.git'
        publish = true
        version {
            name = project.version
            released = new Date()
        }
    }
}

publishing {
    publications {
        BintrayRelease(MavenPublication) {
            from components.java
            groupId group
            artifactId artifactid
            version version
            artifact javadocJar
            artifact sourcesJar
        }
    }
}

build {
    dependsOn clean
    dependsOn jar
    dependsOn javadocJar
    dependsOn sourcesJar
    dependsOn shadowJar

    dependsOn test

    jar.mustRunAfter clean
    javadocJar.mustRunAfter jar
    sourcesJar.mustRunAfter javadocJar
    shadowJar.mustRunAfter sourcesJar
}

bintrayUpload {
    dependsOn build

    onlyIf { !"$bintray_user".isEmpty() }
    onlyIf { !"$bintray_api_key".isEmpty() }
}

class Version {
    String major, minor, revision

    String toString() {
        "${major}.${minor}" + (revision == "0" ? "" : ".${revision}")
    }
}